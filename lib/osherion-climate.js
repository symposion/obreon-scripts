'use strict';
const ObreonDate = require('./obreon-date');

module.exports = {
  seasons: [
    {
      name: 'viridantis',
      start: ObreonDate.fromString('*/2/16'),
      end: ObreonDate.fromString('*/5/1'),
      minTemp: 8,
      maxTemp: 25,
      baseModel: {
        weather: 'largely clear',
        tempIncrease: '1d6-2',
        nextRoll: '1d4',
        nextDefault: 'base',
        nextSpecials: [
          'springRains1',
        ],
      },
    },
    {
      name: 'canicula',
      start: ObreonDate.fromString('*/5/1'),
      end: ObreonDate.fromString('*/7/16'),
      minTemp: 12,
      maxTemp: 36,
      baseModel: {
        weather: 'bright and sunny',
        tempIncrease: '1d6-2',
        nextRoll: '1d24',
        nextDefault: 'base',
        nextSpecials: [
          'heatWave',
          'summerRains1',
          'summerRains1',
          'summerRains1',
          'summerRains1',
          'thunderstorm1',
          'thunderstorm1',
        ],
      },
    },
    {
      name: 'casifolia',
      start: ObreonDate.fromString('*/7/16'),
      end: ObreonDate.fromString('*/10/1'),
      minTemp: 6,
      maxTemp: 20,
      baseModel: {
        weather: 'largely clear',
        tempIncrease: '1d6-2',
        nextRoll: '1d4',
        nextDefault: 'base',
        nextSpecials: [
          'windyStorm1',
        ],
      },
    },
    {
      name: 'niventis',
      start: ObreonDate.fromString('*/10/1'),
      end: ObreonDate.fromString('*/2/16'),
      minTemp: 0,
      maxTemp: 14,
      baseModel: {
        weather: 'dry',
        tempIncrease: '1d6-3',
        nextRoll: '1d18',
        nextDefault: 'base',
        nextSpecials: [
          'coldSnap1',
          'coldSnap1',
          'winterRains1',
          'winterRains1',
          'winterRains1',
        ],
      },
    },
  ],
  subModels: {
    springRains1: {
      weather: 'clouding over, threat of rain',
      tempIncrease: '0-1d6',
      nextRoll: '1d8',
      nextDefault: 'springRains2',
      nextSpecials: ['springRainsFlashFlood'],
    },
    springRains2: {
      weather: 'squally rain showers',
      tempIncrease: '0-1d6',
      nextDefault: 'base',
      nextRoll: '1d4',
      nextSpecials: ['springRains2'],
    },
    springRainsFlashFlood: {
      weather: 'intense persistent rainstorm',
      tempIncrease: '0-1d6',
      nextDefault: 'springRains2',
    },
    heatWave: {
      weather: 'fierce sunshine',
      tempIncrease: '1d6',
      nextDefault: 'heatWave',
      nextRoll: '1d8',
      maxTemp: 36,
      nextSpecials: ['base'],
    },
    summerRains1: {
      weather: 'clouding over, threat of rain',
      tempIncrease: '0-1d4',
      nextDefault: 'summerRains2',
    },
    summerRains2: {
      weather: 'overcast, clammy, drizzly weather',
      tempIncrease: '0-1d6',
      nextDefault: 'summerRains3',
    },
    summerRains3: {
      weather: 'overcast, clammy, drizzly weather',
      tempIncrease: '0',
      nextDefault: 'summerRains3',
      nextRoll: '1d2',
      nextSpecials: ['base'],
    },
    thunderstorm1: {
      weather: 'oppressive, heavy weather, very muggy',
      tempIncrease: '1d4+2',
      nextDefault: 'thunderstorm2',
      nextRoll: '1d6',
      nextSpecials: ['epicThunderstorm'],
    },
    thunderstorm2: {
      weather: 'electrical storm, heavy rain, followed by clear skies',
      tempIncrease: '0-1d6-2',
      nextDefault: 'base',
    },
    epicThunderstorm: {
      weather: 'huge thunderstorm, torrential rain, flash floods',
      tempIncrease: '0-1d6-4',
      nextDefault: 'base',
    },
    windyStorm1: {
      weather: 'clouding over, wind picking up',
      tempIncrease: '0-1d6-2',
      nextDefault: 'windyStorm2',
      nextRoll: '1d60',
      nextSpecials: [
        'gale',
        'gale',
        'gale',
        'gale',
        'gale',
        'severeGale',
        'severeGale',
        'storm',
        'storm',
        'hurricane',
      ],
    },
    windyStorm2: {
      weather: 'windy and rainy',
      tempIncrease: '0-1d6',
      nextDefault: 'base',
    },
    gale: {
      weather: 'rain and gale-force winds',
      tempIncrease: '0-1d6',
      nextDefault: 'windyStorm2',
    },
    severeGale: {
      weather: 'rain and severe gale-force winds',
      tempIncrease: '0-1d6',
      nextDefault: 'windyStorm2',
    },
    storm: {
      weather: 'rain and storm-force winds',
      tempIncrease: '0-1d6',
      nextDefault: 'windyStorm2',
    },
    hurricane: {
      weather: 'HURRICANE!',
      tempIncrease: '0-1d6',
      nextDefault: 'windyStorm2',
    },
    coldSnap1: {
      weather: 'crisp and icy',
      tempIncrease: '0-1d6-2',
      minTemp: -20,
      maxTemp: 6,
      nextDefault: 'base',
      nextRoll: '1d8',
      nextSpecials: [
        'coldSnap1',
        'coldSnap1',
        'snow',
      ],
    },
    winterRains1: {
      weather: 'overcast and miserable',
      tempIncrease: '1d2-2',
      nextDefault: 'winterRains2',
      nextRoll: '1d8',
      nextSpecials: [
        'base',
        'base',
        'snow',
      ],
    },
    winterRains2: {
      weather: 'overcast and miserable',
      tempIncrease: '0',
      nextDefault: 'winterRains2',
      nextRoll: '1d3',
      nextSpecials: [
        'base',
      ],
    },
    snow: {
      weather: 'overcast and snowing',
      tempIncrease: '0-1d6-2',
      minTemp: -5,
      maxTemp: 6,
      nextDefault: 'winterRains2',
      nextRoll: '1d10',
      nextSpecials: [
        'snow',
        'snow',
        'base',
        'base',
        'blizzard',
      ],
    },
    blizzard: {
      weather: 'BLIZZARD!',
      tempIncrease: '0-1d6-4',
      minTemp: -6,
      maxTemp: 6,
      nextDefault: 'snow',
      nextRoll: '1d6',
      nextSpecials: [
        'base',
        'base',
        'winterRains2',
        'blizzard',
      ],
    },
  },
};
